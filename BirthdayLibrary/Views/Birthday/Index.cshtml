@model X.PagedList.PagedList<BirthdayLibrary.Models.BirthdayModel>


@{
    ViewData["Title"] = "Index";
}

    <section class="content-header">
        <h1>Index</h1>
    </section>
   
    <section class="content container-fluid">

        @using (Html.BeginForm("Index", "Birthday", FormMethod.Get))
        {
            <div>
                Find by: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)

                <input name="nome" type="submit" value="Search" placeholder="Search" aria-label="Search">
                <button title="Clean" asp-action="Index" type="button" value="clean">
                    @Html.ActionLink("Clean", "Index")
                </button>
            </div>
        }

        <div class="row">
            <div class="col-lg-8 col-md-6 col-sm-12">
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                Id
                            </th>
                            <th>
                                @Html.ActionLink("Nome", "Index", new { sorterOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                            </th>
                            <th>
                                Sobrenome
                            </th>
                            <th>
                                Data Nascimento
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Nome)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Sobrenome)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DataNascimento)
                                </td>
                                <td>
                                    <button type="button" class="btn btn-primary">
                                        <i class="far fa-edit">

                                        </i>
                                        @Html.ActionLink("Edit", "Edit", item)
                                    </button>
                                    <button type="button" class="btn btn-success">
                                        <i class="fas fa-eye">

                                        </i>
                                        @Html.ActionLink("Details", "Details", new { Id = item.Id })
                                    </button>
                                    <button type="button" class="btn btn-danger">
                                        <i class="far fa-trash-alt">

                                        </i>
                                        @Html.ActionLink("Delete", "Delete", new { Id = item.Id })
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div>
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
                    of @Model.PageCount

                    @if (Model.HasPreviousPage)
                    {
                        @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                        @Html.Raw(" ");
                        @Html.ActionLink("< Anterior", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                    }
                    else
                    {
                        @:<<
                        @Html.Raw(" ");
                        @:< Anterior
                    }

                    @if (Model.HasNextPage)
                    {
                        @Html.ActionLink("Próxima >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                        @Html.Raw(" ");
                        @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                    }
                    else
                    {
                        @:Próxima >
                        @Html.Raw(" ")
                        @:>>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4 col-md-6 col-sm-12">
                    <h2>Aniversariantes do dia</h2>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    Nome
                                </th>
                                <th>
                                    Sobrenome
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (BirthdayModel birthday in ViewBag.AniversariantesDoDia)
                            {
                                <tr>
                                    <td>@birthday.Nome</td>
                                    <td>@birthday.Sobrenome</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="col-lg-4 col-md-6 col-sm-12">
                    <h2>Próximos Aniversários</h2>
                    <table class="table" id="tblPessoas">
                        <thead>
                            <tr>
                                <th>
                                    Nome
                                </th>
                                <th>
                                    Sobrenome
                                </th>
                                <th>
                                    Data de aniversário
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (BirthdayModel birthdayModel in ViewBag.Pessoas)
                            {
                                <tr>
                                    <td>@birthdayModel.Nome</td>
                                    <td>@birthdayModel.Sobrenome</td>
                                    <td>@birthdayModel.DataNascimento.ToShortDateString()</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>


        </div>

    </section>




